/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.InfoFilter;
import Controller.InfoFilterImp;
import Model.Registering;
import Model.Student;
import Model.Subject;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Administrator
 */
public class AddNewRegisteringDialog extends javax.swing.JDialog implements ActionListener{

    /**
     * Creates new form AddNewRegisteringDialog
     */
    HomeFRM homeFRM;
    List<Subject>subjects;
    List<Student>students;
    List<Registering>registerings;
    Student student;
    Subject subject;
    public AddNewRegisteringDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        homeFRM=(HomeFRM) parent;
        addActionListener();
        setLocationRelativeTo(null);
        txtTimeRegistering.setEnabled(false);
    }

    AddNewRegisteringDialog(java.awt.Frame parent, boolean modal,
            List<Subject> subjects,List<Student> students,
            List<Registering> registerings) {
        this(parent, modal);
        this.students=students;
        this.subjects=subjects;
        this.registerings=registerings;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtSearchStudentId = new javax.swing.JTextField();
        txtSearchSubjectId = new javax.swing.JTextField();
        btnSearchStudent = new javax.swing.JButton();
        btnSearchSubject = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtStudentId = new javax.swing.JTextField();
        txtStudentName = new javax.swing.JTextField();
        txtMajor = new javax.swing.JTextField();
        txtSubjectId = new javax.swing.JTextField();
        txtSubjectName = new javax.swing.JTextField();
        txtTimeRegistering = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        jButton1.setText("jButton1");

        jButton3.setText("jButton3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Đăng kí môn học");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin nhập liệu"));

        jLabel2.setText("Mã sinh viên:");

        jLabel3.setText("Mã môn học:");

        btnSearchStudent.setText("Tìm sinh viên");

        btnSearchSubject.setText("Tìm môn học");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSearchStudentId)
                    .addComponent(txtSearchSubjectId, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSearchStudent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSearchSubject, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(22, 22, 22))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtSearchStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchStudent))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtSearchSubjectId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchSubject))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin đăng kí"));

        jLabel4.setText("Mã sinh viên:");

        jLabel5.setText("Họ tên:");

        jLabel6.setText("Ngành:");

        jLabel7.setText("Mã môn học:");

        jLabel8.setText("Tên môn học:");

        jLabel9.setText("Thời gian đăng kí:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtStudentId)
                    .addComponent(txtStudentName)
                    .addComponent(txtMajor)
                    .addComponent(txtSubjectId)
                    .addComponent(txtSubjectName)
                    .addComponent(txtTimeRegistering, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtMajor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtSubjectId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtSubjectName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtTimeRegistering, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnAdd.setText("Đăng kí");

        btnRefresh.setText("Xóa dữ liệu");

        btnCancel.setText("Hủy bỏ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(btnAdd)
                .addGap(60, 60, 60)
                .addComponent(btnRefresh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(btnCancel)
                .addGap(60, 60, 60))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnRefresh)
                    .addComponent(btnCancel))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddNewRegisteringDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddNewRegisteringDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddNewRegisteringDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddNewRegisteringDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AddNewRegisteringDialog dialog = new AddNewRegisteringDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSearchStudent;
    private javax.swing.JButton btnSearchSubject;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtMajor;
    private javax.swing.JTextField txtSearchStudentId;
    private javax.swing.JTextField txtSearchSubjectId;
    private javax.swing.JTextField txtStudentId;
    private javax.swing.JTextField txtStudentName;
    private javax.swing.JTextField txtSubjectId;
    private javax.swing.JTextField txtSubjectName;
    private javax.swing.JTextField txtTimeRegistering;
    // End of variables declaration//GEN-END:variables

    private void addActionListener() {
        btnAdd.addActionListener(this);
        btnRefresh.addActionListener(this);
        btnCancel.addActionListener(this);
        btnSearchStudent.addActionListener(this);
        btnSearchSubject.addActionListener(this);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        Object obj=e.getSource();
        if(obj.equals(btnAdd)){
            addNewRegistering();
        }else if(obj.equals(btnCancel)){
            cancelRegistering();
        }else if(obj.equals(btnRefresh)){
            refreshRegistering();
        } else if(obj.equals(btnSearchStudent)){
            searchStudent();
        }else if(obj.equals(btnSearchSubject)){
            searchSubject();
        }
    }

    private void addNewRegistering() {
        if(subject != null && student != null){
            Date currentTime = new Date();
            String regex = "dd/MM/yyyy HH:mm:ss";
            SimpleDateFormat dateFormat = new SimpleDateFormat(regex);
            txtTimeRegistering.setText(dateFormat.format(currentTime));
            InfoFilter checker = new InfoFilterImp();
            Registering r = new Registering(student, subject, currentTime);
            if(checker.isRecordExist(registerings, r)){
                String msg = "Sinh viên " + student.getFullName()+" đã "
                        +"đăng kí môn học "+ subject.getSubjectName()+" trước đó.";
                showMessage(msg);
            }else{
                homeFRM.CallBackAddRegistering(r);
                String msg = "Đăng kí môn học thành công";
                showMessage(msg);
            }
        }else{
            String msg = "Vui lòng nhập mã sinh viên mà mã môn học trước";
            showMessage(msg);
        }
    }

    private void refreshRegistering() {
       String empty="";
       txtMajor.setText(empty);
       txtSearchStudentId.setText(empty);
       txtSearchSubjectId.setText(empty);
       txtStudentId.setText(empty);
       txtSubjectId.setText(empty);
       txtStudentName.setText(empty);
       txtSubjectName.setText(empty);
       txtTimeRegistering.setText(empty);
    }
    
    private void showMessage(String msg){
        JOptionPane.showMessageDialog(rootPane, msg);
    }
    private void cancelRegistering() {
        this.dispose();
        
    }

    private void searchStudent() {
        student=null;
        String id=txtSearchStudentId.getText();
        if(id.isEmpty()){
            String msg="Vui lòng nhập mã sinh viên cần tìm kiếm";
            showMessage(msg);
        }else{
            for (Student s : students) {
                if(s.getStudentId().compareToIgnoreCase(id) == 0){
                    student=s;
                    break;
                }
            }
            if(student != null){
                txtStudentId.setText(student.getStudentId()+"");
                txtStudentName.setText(student.getFullName());
                txtMajor.setText(student.getMajor());
                
            }else{
                txtStudentId.setText("");
                txtStudentName.setText("");
                txtMajor.setText("");
                String msg="Không tìm thấy sinh viên có mã \""+id+"\"";
                showMessage(msg);
            }
        }
    }

    private void searchSubject() {
        subject=null;
        String idStr=txtSearchSubjectId.getText();
        if(idStr.isEmpty()){
            String msg="Vui lòng nhập mã môn học cần tìm kiếm";
            showMessage(msg);
        }else{
            int id=Integer.parseInt(idStr);
            for (Subject s : subjects) {
                if(s.getSubjectID() == id){
                    subject=s;
                    break;
                }
            }
            if(subject != null){
                txtSubjectId.setText(subject.getSubjectID()+"");
                txtSubjectName.setText(subject.getSubjectName());
                
            }else{
                txtSubjectId.setText("");
                txtSubjectName.setText("");
                String msg="Không tìm thấy môn học có mã \""+id+"\"";
                showMessage(msg);
            }
        }
    }

    
}
